
server radsec {
  listen {
    type = auth
    ipaddr = *
    port = 2083
    proto = tcp
    clients = radsec

    limit {
      idle_timeout = 180
      lifetime = 0
      max_connections = 0
    }

    tls {
      private_key_password = `$ENV{RADSEC_PRIVATE_KEY_PASSWORD}`
      private_key_file = ${radsec_certdir}/server.pem
      certificate_file = ${radsec_certdir}/server.pem
      fragment_size = 1024
      ca_path = ${radsec_certdir}
      dh_file = ${raddbdir}/certs/dh
      random_file = /dev/random
      check_crl = no
      cipher_list = "DEFAULT@SECLEVEL=1"
      include_length = yes
      require_client_cert = yes
      tls_min_version = "1.2"
      tls_max_version = "1.2"
      auto_chain = yes

      cache {
            enable = no
      }
    }
  }

  authorize {
    preprocess
    rewrite_calling_station_id
    authorized_macs

    if (!EAP-Message) {

      if (!ok) {
        reject
      }
      else {
        update control {
          Auth-Type := Accept
        }
      }
    } else {
      eap
    }
  }

  authenticate {
    eap
  }

  post-auth {
    update request {
      TLS-Client-Cert-Subject-Alt-Name-Dns += "%{request:TLS-Client-Cert-Subject-Alt-Name-Dns[*]}"
      Client-Shortname := "%{Client-Shortname}"
    }

    python3
  }
}
